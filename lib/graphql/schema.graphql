
type Card {
  _id: ID!
  pokemon_number: Int!
  icon_url: String
  english_name: String
  type: [String]
  abilities: [String]
  experience: Int
  generation: String
  attack: Int
  special_attack: Int
  defense: Int
  special_defense: Int
  speed: Int
  hp: Int
  image_url: String
  weight_kg: String
  height_m: String
  percentage_male: String
  percentage_female: String
  group_by_force: Int
}

type Legend {
  _id: ID!
  type_pokemon: String
  prob_type_legendary: Float
}

type Query {
  "Get gards data (page: 1 - ...) (numberOfPages: anyNumber) "
  getCards(page: Int, numberOfPages: Int): [Card]
  "Search cards"
  searchCards(
    type: String,
    experience: [Int],
    attack: [Int],
    name: String,
    page: Int,
    numberOfPages: Int,
  ): [Card]
  "Get data depending the group_by_force number"
  getByForce(force: Int!, page: Int, numberOfPages: Int): [Card]
  "Get Legendary type"
  getLegendary(type: String, page: Int, numberOfPages: Int): [Card]
  "Get Legendary porcentage"
  getLegendPercentage(type: String): [Legend]
}
